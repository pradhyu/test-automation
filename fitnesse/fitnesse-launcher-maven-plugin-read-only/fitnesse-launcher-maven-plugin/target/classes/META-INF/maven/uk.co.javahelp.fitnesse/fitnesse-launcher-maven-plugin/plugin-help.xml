<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.2 on 2014-10-16 -->

<plugin>
  <name>FitNesse Launcher Maven Plugin</name>
  <description>Provides ability to launch FitNesse as a wiki server, or automatically run FitNesse tests as part of a standard integration-test / verify build. Allows configuration of FitNesse&apos;s classpath through plugin dependencies, and injects all Maven project properties as FitNesse variables, ( which can be overridden from the command line using &apos;-D&apos; ).</description>
  <groupId>uk.co.javahelp.fitnesse</groupId>
  <artifactId>fitnesse-launcher-maven-plugin</artifactId>
  <version>1.5.0-SNAPSHOT</version>
  <goalPrefix>fitnesse</goalPrefix>
  <mojos>
    <mojo>
      <goal>html-report</goal>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>site</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.reporting.FitNesseHtmlReport</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>reportsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where reports go.</description>
        </parameter>
      </parameters>
      <configuration>
        <reportsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/reports">${fitnesse.reports}</reportsDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>run-tests</goal>
      <description>Goal that launches FitNesse tests using fitnesse.junit.TestHelper. Intended to be bound to the &apos;integration-test&apos; phase.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>integration-test</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.mojo.RunTestsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>createSymLink</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>fitnesse-launcher-maven-plugin unpacks a fresh copy of FitNesse under /target; Only your project specific FitNesse tests need go under src/test/fitnesse. By setting &apos;createSymLink&apos; to &apos;true&apos;, fitnesse-launcher-maven-plugin will create a FitNesse SymLink directly to your test suite under src/test/fitnesse. This is most useful when developing tests in &apos;wiki&apos; mode, as then you can directly scm commit your changes. If you prefer to copy-resources from src/test/fitnesse into /target/fitnesse, let &apos;createSymLink&apos; be &apos;false&apos;.</description>
        </parameter>
        <parameter>
          <name>excludeOptionalDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should fitnesse-launcher-maven-plugin exclude optional transitive dependencies, when configured using &lt;useProjectDependencies&gt; ?
Note: This may result in duplicates or conflicts for transitive dependencies.
See Issue #27.
Defaults to true.
@Deprecated</description>
        </parameter>
        <parameter>
          <name>excludeSuiteFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>failIfNoTests</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>launches</name>
          <type>uk.co.javahelp.maven.plugin.fitnesse.mojo.Launch[]</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>logDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>reportsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where reports go.</description>
        </parameter>
        <parameter>
          <name>resultsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where test results go.</description>
        </parameter>
        <parameter>
          <name>root</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>runTestsMatchingAllTags</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>suite</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>suiteFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>summaryFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The summary file to write integration test results to.</description>
        </parameter>
        <parameter>
          <name>test</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testResourceDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>useProjectDependencies</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workingDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <createSymLink implementation="boolean" default-value="true">${fitnesse.createSymLink}</createSymLink>
        <excludeOptionalDependencies implementation="boolean" default-value="true">${fitnesse.excludeOptionalDependencies}</excludeOptionalDependencies>
        <excludeSuiteFilter implementation="java.lang.String">${fitnesse.excludeSuiteFilter}</excludeSuiteFilter>
        <failIfNoTests implementation="java.lang.Boolean" default-value="true">${fitnesse.failIfNoTests}</failIfNoTests>
        <launches implementation="uk.co.javahelp.maven.plugin.fitnesse.mojo.Launch[]">${fitnesse.launches}</launches>
        <logDir implementation="java.lang.String">${fitnesse.logDir}</logDir>
        <port implementation="java.lang.Integer" default-value="9123">${fitnesse.port}</port>
        <reportsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/reports">${fitnesse.reports}</reportsDir>
        <resultsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results">${fitnesse.results}</resultsDir>
        <root implementation="java.lang.String" default-value="FitNesseRoot">${fitnesse.root}</root>
        <runTestsMatchingAllTags implementation="java.lang.String">${fitnesse.runTestsMatchingAllTags}</runTestsMatchingAllTags>
        <suite implementation="java.lang.String">${fitnesse.suite}</suite>
        <suiteFilter implementation="java.lang.String">${fitnesse.suiteFilter}</suiteFilter>
        <summaryFile implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results/failsafe-summary.xml">${fitnesse.summary.file}</summaryFile>
        <test implementation="java.lang.String">${fitnesse.test}</test>
        <testResourceDirectory implementation="java.lang.String" default-value="src/test/fitnesse">${fitnesse.test.resource.directory}</testResourceDirectory>
        <useProjectDependencies implementation="java.util.Set">${fitnesse.useProjectDependencies}</useProjectDependencies>
        <workingDir implementation="java.lang.String" default-value="${project.build.directory}/fitnesse">${fitnesse.working}</workingDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>set-up</goal>
      <description>This Mojo is devoted simply to fetching and unpacking FitNesse into a correct working directory structure, and making sure everything is cleanly setup for running FitNesse.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>pre-integration-test</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.mojo.SetUpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>alwaysUnpackFitnesse</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set, fitnesse-launcher-maven-plugin will always freshly unpack the FitNesse jar, as part of setting up a clean fitnesse environment.</description>
        </parameter>
        <parameter>
          <name>deletePluginsProperties</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set, fitnesse-launcher-maven-plugin will delete any existing plugins.properties file as part of setting up a clean fitnesse environment. If you need to retain the plugin.properties file, set this property to false.</description>
        </parameter>
        <parameter>
          <name>pluginDescriptor</name>
          <type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>true</editable>
          <description>Maven project, to be injected by Maven itself.</description>
        </parameter>
        <parameter>
          <name>root</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workingDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <alwaysUnpackFitnesse implementation="boolean" default-value="false">${fitnesse.alwaysUnpackFitnesse}</alwaysUnpackFitnesse>
        <deletePluginsProperties implementation="boolean" default-value="false">${fitnesse.deletePluginsProperties}</deletePluginsProperties>
        <pluginDescriptor implementation="org.apache.maven.plugin.descriptor.PluginDescriptor">${plugin}</pluginDescriptor>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <root implementation="java.lang.String" default-value="FitNesseRoot">${fitnesse.root}</root>
        <workingDir implementation="java.lang.String" default-value="${project.build.directory}/fitnesse">${fitnesse.working}</workingDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>shutdown</goal>
      <description>Goal that shuts down FitNesse. This is done by sending GET to http://localhost:&lt;port&gt;/?responder=shutdown.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.mojo.ShutdownMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>port</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <port implementation="java.lang.String" default-value="9123">${fitnesse.port}</port>
      </configuration>
    </mojo>
    <mojo>
      <goal>surefire-report</goal>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>site</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.reporting.FitNesseSurefireReport</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>resultsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where test results go.</description>
        </parameter>
      </parameters>
      <configuration>
        <resultsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results">${fitnesse.results}</resultsDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>tear-down</goal>
      <description>Cleanup debris after FitNesse runs. See PageInProgressFormatter and TestsInProgress, wherein they have hard-coded the directory where they track test progress.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>post-integration-test</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.mojo.TearDownMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>pluginDescriptor</name>
          <type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>true</editable>
          <description>Maven project, to be injected by Maven itself.</description>
        </parameter>
        <parameter>
          <name>root</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workingDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <pluginDescriptor implementation="org.apache.maven.plugin.descriptor.PluginDescriptor">${plugin}</pluginDescriptor>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <root implementation="java.lang.String" default-value="FitNesseRoot">${fitnesse.root}</root>
        <workingDir implementation="java.lang.String" default-value="${project.build.directory}/fitnesse">${fitnesse.working}</workingDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>verify</goal>
      <description>Goal that provides summary report on FitNesse tests run with &apos;run-tests&apos; goal. Intended to be bound to the &apos;verify&apos; phase. Will fail the build if there are test failures.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.mojo.VerifyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>createSymLink</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>fitnesse-launcher-maven-plugin unpacks a fresh copy of FitNesse under /target; Only your project specific FitNesse tests need go under src/test/fitnesse. By setting &apos;createSymLink&apos; to &apos;true&apos;, fitnesse-launcher-maven-plugin will create a FitNesse SymLink directly to your test suite under src/test/fitnesse. This is most useful when developing tests in &apos;wiki&apos; mode, as then you can directly scm commit your changes. If you prefer to copy-resources from src/test/fitnesse into /target/fitnesse, let &apos;createSymLink&apos; be &apos;false&apos;.</description>
        </parameter>
        <parameter>
          <name>excludeOptionalDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should fitnesse-launcher-maven-plugin exclude optional transitive dependencies, when configured using &lt;useProjectDependencies&gt; ?
Note: This may result in duplicates or conflicts for transitive dependencies.
See Issue #27.
Defaults to true.
@Deprecated</description>
        </parameter>
        <parameter>
          <name>excludeSuiteFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>failIfNoTests</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>launches</name>
          <type>uk.co.javahelp.maven.plugin.fitnesse.mojo.Launch[]</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>logDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>maxErrorsToConsole</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>reportsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where reports go.</description>
        </parameter>
        <parameter>
          <name>resultsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where test results go.</description>
        </parameter>
        <parameter>
          <name>root</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>runTestsMatchingAllTags</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>suite</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>suiteFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>summaryFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The summary file to write integration test results to.</description>
        </parameter>
        <parameter>
          <name>test</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testResourceDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>useProjectDependencies</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workingDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <createSymLink implementation="boolean" default-value="true">${fitnesse.createSymLink}</createSymLink>
        <excludeOptionalDependencies implementation="boolean" default-value="true">${fitnesse.excludeOptionalDependencies}</excludeOptionalDependencies>
        <excludeSuiteFilter implementation="java.lang.String">${fitnesse.excludeSuiteFilter}</excludeSuiteFilter>
        <failIfNoTests implementation="java.lang.Boolean" default-value="true">${fitnesse.failIfNoTests}</failIfNoTests>
        <launches implementation="uk.co.javahelp.maven.plugin.fitnesse.mojo.Launch[]">${fitnesse.launches}</launches>
        <logDir implementation="java.lang.String">${fitnesse.logDir}</logDir>
        <maxErrorsToConsole implementation="int">${fitnesse.maxErrorsToConsole}</maxErrorsToConsole>
        <port implementation="java.lang.Integer" default-value="9123">${fitnesse.port}</port>
        <reportsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/reports">${fitnesse.reports}</reportsDir>
        <resultsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results">${fitnesse.results}</resultsDir>
        <root implementation="java.lang.String" default-value="FitNesseRoot">${fitnesse.root}</root>
        <runTestsMatchingAllTags implementation="java.lang.String">${fitnesse.runTestsMatchingAllTags}</runTestsMatchingAllTags>
        <suite implementation="java.lang.String">${fitnesse.suite}</suite>
        <suiteFilter implementation="java.lang.String">${fitnesse.suiteFilter}</suiteFilter>
        <summaryFile implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results/failsafe-summary.xml">${fitnesse.summary.file}</summaryFile>
        <test implementation="java.lang.String">${fitnesse.test}</test>
        <testResourceDirectory implementation="java.lang.String" default-value="src/test/fitnesse">${fitnesse.test.resource.directory}</testResourceDirectory>
        <useProjectDependencies implementation="java.util.Set">${fitnesse.useProjectDependencies}</useProjectDependencies>
        <workingDir implementation="java.lang.String" default-value="${project.build.directory}/fitnesse">${fitnesse.working}</workingDir>
      </configuration>
    </mojo>
    <mojo>
      <goal>wiki</goal>
      <description>Goal that launches FitNesse as a wiki server. Useful for manually running / developing / debugging FitNesse tests. Once launched, just visit http://localhost:&lt;port&gt;/&lt;suite&gt;. Use the &apos;shutdown&apos; goal (from a different command line), or Ctrl+C to shutdown, or send GET to http://localhost:&lt;port&gt;/?responder=shutdown.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>integration-test</phase>
      <implementation>uk.co.javahelp.maven.plugin.fitnesse.mojo.WikiMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>createSymLink</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>fitnesse-launcher-maven-plugin unpacks a fresh copy of FitNesse under /target; Only your project specific FitNesse tests need go under src/test/fitnesse. By setting &apos;createSymLink&apos; to &apos;true&apos;, fitnesse-launcher-maven-plugin will create a FitNesse SymLink directly to your test suite under src/test/fitnesse. This is most useful when developing tests in &apos;wiki&apos; mode, as then you can directly scm commit your changes. If you prefer to copy-resources from src/test/fitnesse into /target/fitnesse, let &apos;createSymLink&apos; be &apos;false&apos;.</description>
        </parameter>
        <parameter>
          <name>excludeOptionalDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should fitnesse-launcher-maven-plugin exclude optional transitive dependencies, when configured using &lt;useProjectDependencies&gt; ?
Note: This may result in duplicates or conflicts for transitive dependencies.
See Issue #27.
Defaults to true.
@Deprecated</description>
        </parameter>
        <parameter>
          <name>excludeSuiteFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>failIfNoTests</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>launches</name>
          <type>uk.co.javahelp.maven.plugin.fitnesse.mojo.Launch[]</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>logDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>reportsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where reports go.</description>
        </parameter>
        <parameter>
          <name>resultsDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>This is where test results go.</description>
        </parameter>
        <parameter>
          <name>root</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>runTestsMatchingAllTags</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>suite</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>suiteFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>summaryFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The summary file to write integration test results to.</description>
        </parameter>
        <parameter>
          <name>test</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testResourceDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>useProjectDependencies</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>workingDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <createSymLink implementation="boolean" default-value="true">${fitnesse.createSymLink}</createSymLink>
        <excludeOptionalDependencies implementation="boolean" default-value="true">${fitnesse.excludeOptionalDependencies}</excludeOptionalDependencies>
        <excludeSuiteFilter implementation="java.lang.String">${fitnesse.excludeSuiteFilter}</excludeSuiteFilter>
        <failIfNoTests implementation="java.lang.Boolean" default-value="true">${fitnesse.failIfNoTests}</failIfNoTests>
        <launches implementation="uk.co.javahelp.maven.plugin.fitnesse.mojo.Launch[]">${fitnesse.launches}</launches>
        <logDir implementation="java.lang.String">${fitnesse.logDir}</logDir>
        <port implementation="java.lang.Integer" default-value="9123">${fitnesse.port}</port>
        <reportsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/reports">${fitnesse.reports}</reportsDir>
        <resultsDir implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results">${fitnesse.results}</resultsDir>
        <root implementation="java.lang.String" default-value="FitNesseRoot">${fitnesse.root}</root>
        <runTestsMatchingAllTags implementation="java.lang.String">${fitnesse.runTestsMatchingAllTags}</runTestsMatchingAllTags>
        <suite implementation="java.lang.String">${fitnesse.suite}</suite>
        <suiteFilter implementation="java.lang.String">${fitnesse.suiteFilter}</suiteFilter>
        <summaryFile implementation="java.io.File" default-value="${project.build.directory}/fitnesse/results/failsafe-summary.xml">${fitnesse.summary.file}</summaryFile>
        <test implementation="java.lang.String">${fitnesse.test}</test>
        <testResourceDirectory implementation="java.lang.String" default-value="src/test/fitnesse">${fitnesse.test.resource.directory}</testResourceDirectory>
        <useProjectDependencies implementation="java.util.Set">${fitnesse.useProjectDependencies}</useProjectDependencies>
        <workingDir implementation="java.lang.String" default-value="${project.build.directory}/fitnesse">${fitnesse.working}</workingDir>
      </configuration>
    </mojo>
  </mojos>
</plugin>